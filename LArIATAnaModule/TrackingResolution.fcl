#include "services_lariat.fcl"
#include "caldata_lariat.fcl"
#include "hitfindermodules.fcl"
#include "lariatclustermodules.fcl"
#include "trackfindermodules.fcl"
#include "calorimetry.fcl"
#include "particleid.fcl"
#include "showerreco3d.fcl"
#include "showerquality.fcl"
#include "lariat_reco_algs.fcl"
#include "lariatbeamlinereco.fcl"
#include "services_lariat.fcl"
#include "lariatcheckmodules.fcl"
#include "triggeralgo_service.fcl"
#include "lariatanamodules.fcl"
#include "cluster_lariat.fcl"
#include "showerfindermodules.fcl"
##include "pandoramodules.fcl"
##include "resourcetracking_services.fcl"
 
process_name: TrackingResolution

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "TrackingResolution_histo.root" }
 #@table::standard_resourcetrackers
  RandomNumberGenerator: {} #ART native random number generator
  #message:      @local::lariat_message_services
  @table::lariat_services
}
services.scheduler.SkipEvent: [ ProductNotFound ]

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}



# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 analyzers:
     {
        TRes:
            {
            module_type  : "TrackingResolution"
            nSpt_Gap     : 4
            nSpt_Min_Half: 4
            chi2_Cut     : 100
            }
        }



 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [  ]
	  
 ana: [ TRes ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [  ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1,ana]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   #fileName:    "%ifb_%tc_reco2D.root"
   fileName:    "%ifb_Combined.root"
   dataTier:    "reconstructed-2d"
   compressionLevel: 1
 }
}




