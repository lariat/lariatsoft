#include "services_lariat.fcl"
#include "triggeralgo_service.fcl"
#include "imagepatternalgs.fcl"
#include "lariatfiltermodules.fcl"

## Daniel Smith
## dansmith@bu.edu

process_name: NNShowerFilter

services:
{
  TFileService: { fileName: "NNShowerFilter_hist.root" }
  RandomNumberGenerator: {} #ART native random number generator
  @table::lariat_services
}

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

physics:
{
 
 producers: {}
 analyzers: {}
 filters:
 {
 ShowerFilt:	@local::lariat_nnshower 
 }

 
 reco: [  ] 
 ana:[ ] 
 filt:[ ShowerFilt ]

 stream1:  [ out1 ]
 trigger_paths: [filt,reco] 
 end_paths:     [ana, stream1]  
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   SelectEvents: {SelectEvents:[filt]}
   fileName:    "NNShowerFilter_events.root"
   dataTier:    "reconstructed-2d"
   compressionLevel: 1
 }
}

physics.filters.ShowerFilt.ShowerThresh: 0.75
physics.filters.ShowerFilt.RemoveOrSelect: true # selects things above the threshold

physics.filters.ShowerFilt.NNetModuleLabel: "emtrkmichelid:emtrkmichel:EvtFilterMaker"
physics.filters.ShowerFilt.HitModuleLabel: "linecluster"
physics.filters.ShowerFilt.TrackModuleLabel: "pmtrack"
physics.filters.ShowerFilt.WCTrackLabel: "wctrack"

physics.filters.ShowerFilt.Data: true
physics.filters.ShowerFilt.Verbose: false
