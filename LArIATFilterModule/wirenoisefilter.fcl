#include "services_lariat.fcl"
#include "caldata_lariat.fcl"
#include "hitfindermodules.fcl"
#include "lariatclustermodules.fcl"
#include "trackfindermodules.fcl"
#include "calorimetry_lariat.fcl"
#include "particleid.fcl"
#include "showerreco3d.fcl"
#include "showerquality.fcl"
#include "lariat_reco_algs.fcl"
#include "lariatbeamlinereco.fcl"
#include "services_lariat.fcl"
#include "lariatcheckmodules.fcl"
#include "triggeralgo_service.fcl"
#include "lariatanamodules.fcl"
#include "cluster_lariat.fcl"
#include "showerfindermodules.fcl"
##include "resourcetracking_services.fcl"
#include "lariatfiltermodules.fcl"
 
process_name: TimestampFilter

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "histo_WireNoiseFilter.root" }
  @table::lariat_services
}
services.scheduler.SkipEvent: [ ProductNotFound ]

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}


# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 filters:
 {
  noisefilt:      @local::lariat_wirenoisefilter 
 }

 filt:  [ noisefilt ]
 stream1:  [ out1 ]
 trigger_paths: [ filt ] 
 end_paths:     [ stream1 ]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "out_r%R_%tc_%#.root"
   SelectEvents: [ filt ]
   compressionLevel: 1
 }
}

# ====================================================================
# Specify range of events to select.  For Run I/II:
#   - pedestal events:  ~ 0.  - 1.2 sec
#   - beam events:      ~ 1.2 - 5.5 sec
#   - cosmic events:    ~ > 5.5 sec
#   (default selects ALL events)
physics.filters.noisefilt.MaxWireRmsInd:        4.0    
physics.filters.noisefilt.MaxWireRmsCol:        4.0    
