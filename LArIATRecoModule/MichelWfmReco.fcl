#include "services_lariat.fcl"
#include "lariat_reco_algs.fcl"
#include "databaseutility_lariat.fcl" 

process_name: MichelWfmReco

services:
{
  TFileService: { fileName: "MichelWfmReco_histo.root" }
  message:      @local::standard_info
  user:         @local::lariat_simulation_services
  scheduler:    { }
}

source:
{
  module_type: RootInput
  maxEvents:   -1 
  # fileNames: ["input.root"]
}

outputs: 
{
 out1:
  {
    module_type: RootOutput
    fileName:    "MichelWfmReco_output.root" #default file name, can override from command line with -o or --output
   } 
}

physics:
{
  producers:
  {
    MichelWfmReco:
    {
      module_type: MichelWfmReco
    }
  }
  analysis:  [ MichelWfmReco ]

  #define the output stream, there could be more than one if using filters
  #stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event,
 # #ie filters and producers
 #trigger_paths: [LariatProducer] #DO WE NEED THIS??? 

 #end_paths is a keyword and contains the paths that do not modify the art::Event,                                                                                            
 # #ie analyzers and output streams.  these all run simultaneously 
 # (Add "stream1" to end_paths list to produce output data file with added objects)
 end_paths: [ analysis ]
 #end_paths: [ stream1 ]


}

services.scheduler.SkipEvent:                         [ ProductNotFound ]
physics.producers.MichelWfmReco.HitTimeCutoffLow:      3000;   # default -1000000
physics.producers.MichelWfmReco.HitTimeCutoffHigh:    28000;;  # default  1000000
physics.producers.MichelWfmReco.SaveHitWfmsToTree:    "false"
physics.producers.MichelWfmReco.SaveAllTrackInfoToTree:"true"
physics.producers.MichelWfmReco.Verbosity:            "true"
physics.producers.MichelWfmReco.AveWfmCut_Dt:         5000
physics.producers.MichelWfmReco.CorrectAveWfms:       "true" 
physics.producers.MichelWfmReco.UsePrepulseFit:       "true"  
physics.producers.MichelWfmReco.PrePulseTau1:         800
physics.producers.MichelWfmReco.PrePulseTau2:         1600
physics.producers.MichelWfmReco.PrePulseBaselineFit:  250
physics.producers.MichelWfmReco.TimestampCut:         5.3     
physics.producers.MichelWfmReco.PulseHitThreshold:    0.   # default 0 mV
physics.producers.MichelWfmReco.GradientHitThreshold: -10  # default -10 ADC/ns
physics.producers.MichelWfmReco.MinHitSeparation:     20   # default 20ns
physics.producers.MichelWfmReco.BaselineWindowLength: 1000 # default 1000ns
physics.producers.MichelWfmReco.PromptWindowLength:   100  # default 100ns
physics.producers.MichelWfmReco.FullWindowLength:     7000 # default 7000ns
physics.producers.MichelWfmReco.GateDelay:            300  # 300ns in r6245-6344
physics.producers.MichelWfmReco.PromptLightDtCut:     1800 # default 1800ADC
physics.producers.MichelWfmReco.TriggerUtility:       "FragmentToDigit"
physics.producers.MichelWfmReco.UseTrackInformation:  "true"
physics.producers.MichelWfmReco.DAQModule:            "daq"
physics.producers.MichelWfmReco.TrackModule:          "pmtrack"
physics.producers.MichelWfmReco.TrackCalModule:       "calo"
physics.producers.MichelWfmReco.TrackPIDModule:       "pid"
physics.producers.MichelWfmReco.FiducialMargin_X:     5.
physics.producers.MichelWfmReco.FiducialMargin_Y:     4.
physics.producers.MichelWfmReco.FiducialMargin_Z:     5.
physics.producers.MichelWfmReco.UseTriggerFilter:     "false"
