#include "services_lariat.fcl"
#include "lariat_reco_algs.fcl"
#include "databaseutility_lariat.fcl" 

process_name: MichelWfmReco

services:
{
  TFileService: { fileName: "MichelWfmReco_histo.root" }
  message:      @local::standard_info
  user:         @local::lariat_simulation_services
}

source:
{
  module_type: RootInput
  maxEvents:   -1 
  # fileNames: ["input.root"]
}

outputs: 
{
 out1:
  {
    module_type: RootOutput
    fileName:    "MichelWfmReco_output.root" #default file name, can override from command line with -o or --output
   } # This part of the .fcl is not working right now, the only way of getting a .root output with the objects is by -o fileName.root
}

physics:
{
  producers:
  {
    MichelWfmReco:
    {
      module_type: MichelWfmReco
    }
  }
  analysis:  [ MichelWfmReco ]
  end_paths: [ analysis ]
  
  #define the output stream, there could be more than one if using filters
  stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event,
 # #ie filters and producers
 #trigger_paths: [LariatProducer] #DO WE NEED THIS??? 

 #end_paths is a keyword and contains the paths that do not modify the art::Event,                                                                                            
 # #ie analyzers and output streams.  these all run simultaneously 
 end_paths: [ analysis , stream1]

}

physics.producers.MichelWfmReco.UseTriggerFilter: "false"
physics.producers.MichelWfmReco.GradientHitThreshold: -10
physics.producers.MichelWfmReco.TriggerUtility: "FragmentToDigit"
physics.producers.MichelWfmReco.TriggerFilterAlg.Verbosity: true
