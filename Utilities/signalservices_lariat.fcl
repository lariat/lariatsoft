##include "signalservices.fcl"

BEGIN_PROLOG

lariat_signalshapingservice:
{
  
  DeconNorm: 50
  ADCPerPCAtLowestASICGain: 9390 #ADC/pC
  #ADCPerPCAtLowestASICGain: 4000 #ADC/pC
  #ADCPerPCAtLowestASICGain: 6400 #ADC/pC
  # ASICGains:           [4.7, 7.8, 14, 25] #Default: 7.8
  ASICGainInMVPerFC:  [ 25, 25 ] #mV/fC for Ind & col planes
  ShapeTimeConst:  [ 3.0, 3.0 ] #Gain and Peaking time (microseconds)	
  
  # Noise Factor - rms ADCs @ lowest ASIC Gain (4.7 mV/fC)
  #NoiseFactVec:         [[ 1.12, 0.86, 0.60, 0.55 ], [ 0.89, 0.66, 0.48, 0.43 ]]
  NoiseFactVec:         [[ 1.12, 0.86, 0.60, 0.26 ], [ 0.89, 0.66, 0.48, 0.26 ]]
  # to turn off noise
  # NoiseFactVec:         [[ 0.0, 0.0, 0.0, 0.0 ], [ 0.0, 0.0, 0.0, 0.0 ], [ 0.0, 0.0, 0.0, 0.0 ]]

  #FieldBins:        75 # for UseFunctionFieldShape: true
#  FieldBins:        400
#  InputFieldRespSamplingPeriod: 100. # in nano second

  FieldBins:        1000
  InputFieldRespSamplingPeriod: 30. # in nano second
  

  Col3DCorrection:  2.5
  #Ind3DCorrection:  1.5
  Ind3DCorrection:  1.25 # 1.25
  ColFieldRespAmp:  1.0
  IndFieldRespAmp:  1.0

  FieldResponseTOffset: [-32.5e3, -32.5e3 ] # in ns, time offset of field response shape
  
  #CalibResponseTOffset: [0.0, 0.0 ] # in ns time offset to align all three planes  
  CalibResponseTOffset: [ 28000, 27500] # in ns time offset to align all three planes

  # For IndFilter and ColFilter, frequency (x) is measured in
  # cycles/microsecond.  The conversion to frequency bin depends on FFT size
  # samping rate.
  
  
  IndFilter: "(x>0.)*[0]*(1-1/(1+exp(-(x-[1])/[2])))*(1/(1+exp(-(x-[3])/[4])))"
  IndFilterParams: [2, 0.25, 0.02, 0.025, 0.005]
  
  #IndFilter:       "(x>0.0)*gaus(0)*exp(-0.5*pow(x/[3],[4]))"
  #IndFilterParams: [ 1.74, 1.46, 1., 0.23, 4.89 ]
  
  # IndVFilterParams: [ .454, 0.0, 0.1875, 0.25, 8.0 ]
  #IndVFilterParams: [ 0.05, 0.0, 0.1875, 0.25, 8.0 ]
  #IndFilterParams: [ 1.74, 1.46, 1.33, 0.23, 4.89 ]
  


  ColFilter: "(x>0.)*[0]*(1-1/(1+exp(-(x-[1])/[2])))"
  ColFilterParams: [5, 0.11, 0.04]
  
  #ColFilter:       "(x>0)*[0]*exp(-0.5*(((x-[1])/[2])^2)^[3])"
  #ColFilterParams: [ 1.03, 0.08, 0.15, 2.17 ]  
  
  # ColFilterParams: [ 79258.0, 0.0, 0.1875, 1.5 ]
  #ColFilterParams: [ 0.0792580, 0.0, 0.1875, 1.5 ]
  

  GetFilterFromHisto:   false  

  FilterFunctionFname:  "uboone_filters_v0.1.root"
  FilterHistoName:	"noisefilter_%d"       
  

  UseFunctionFieldShape: false
  UseHistogramFieldShape: false
  #FieldResponseFname:     "dune35t_response_v1.0.root"
  FieldResponseFname:     "uboone_response_v1.3.root"
  FieldResponseHistoName: "FieldResponse"

  ScaleNegativeResponse: [3,    1    ]
  ScaleResponseTime:     [0.98, 0.98 ]

  DebugFieldShape:    false

  #IndFieldShape: "[0]*(1.0+[3]*tanh(x-[4]))*([4]-x)*exp(-0.5*((x-[4])/[2])^2.0)"
  IndFieldShape: ""
  #IndFieldParams:  [.00843,.1534,1.77,0.,0.5]    #last parameter needs to be half of FFT vector, correct for in code
  IndFieldParams: [ 0.85]
  ColFieldShape: "x^[2]/(1.0+(x/[0])^[1])"
  ColFieldParams: [ 8.0,16.0,.75 ]  
}

lariat_signalshapingservice_run1:                     @local::lariat_signalshapingservice
lariat_signalshapingservice_run2:                     @local::lariat_signalshapingservice
lariat_signalshapingservice_run1.IndFieldRespAmp:     0.74 
lariat_signalshapingservice_run1.ColFieldRespAmp:     0.62 
lariat_signalshapingservice_run2.IndFieldRespAmp:     0.66
lariat_signalshapingservice_run2.ColFieldRespAmp:     0.50 
#lariat_signalshapingservice_run1.ADCPerPCAtLowestASICGain: 6950 # default 9300
#lariat_signalshapingservice_run2.ADCPerPCAtLowestASICGain: 6140 # default 9300


END_PROLOG
