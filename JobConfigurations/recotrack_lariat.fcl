#include "services_lariat.fcl"
#include "filters.fcl"
#include "FragmentToDigit_config.fcl"
#include "caldata_lariat.fcl"
#include "lariathitfindermodules.fcl"
#include "lariatclustermodules.fcl"
#include "lariattrackfindermodules.fcl"
#include "clusteralgorithms.fcl"
# #include "HoughLineFinderT1034.fcl"

# TPC event reconstruction chain
# GausHit for hit finding, DBCluster for clustering and SpacePoints for 3D tracks

process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "lariat_reco_hist.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  @table::lariat_services
}


#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1      # Number of events to create
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "lariat_reco.root" #default file name, can override from command line with -o or --output
   SelectEvents: {SelectEvents: [reco] }
 }
 
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {  
    caldata:      @local::lariat_calwire
    gaushit:      @local::lariat_hitfinder
    dbcluster:    @local::lariat_dbcluster
    spacepoints:  @local::lariat_spacepts
    #spacepoints: @local::lariat_cosmictracker
   
    
 }

 filters:
 {
   # filter:  @local::evtfilter
 } 

  analyzers:
  {
   
  }

 #define the producer and filter modules for this path, order matters, 
 reco: [ caldata, gaushit, dbcluster,spacepoints]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ stream1] 
 }

# define the list of LArSoft modules to run through the simulate path
#physics.producers.caldata.DigitModuleLabel: "FragmentToDigit"
physics.producers.gaushit.MinSig: [ 15.0, 30.0 ]
physics.producers.gaushit.Chi2NDFRetry: 100.0
#physics.producers.gaushit.TryNplus1Fits: 1
physics.producers.dbcluster.DBScanAlg.eps : 8
physics.producers.dbcluster.DBScanAlg.epstwo : 8
physics.producers.spacepoints.TMatch: 100.0



