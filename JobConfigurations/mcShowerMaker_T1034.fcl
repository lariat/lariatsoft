#include "services_lariat.fcl"
#include "mcreco.fcl"


process_name: MCReco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "ana_hist.root" }
  RandomNumberGenerator: {} #ART native random number generator
  message:      @local::standard_warning
  @table::lariat_services	     
}

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
  mcreco: @local::standard_mcreco
 }

 analyzers:
 {

 }

 simulate: [ mcreco ]
 analyzeIt: [ ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ stream1]  
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "mcreco.root" #default file name, can override from command line with -o or --output
 }
}


