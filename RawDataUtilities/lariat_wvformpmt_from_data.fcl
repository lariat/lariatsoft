#include "Wvform_PMT_config.fcl"
#include "FragmentToDigit_config.fcl"
process_name: LariatProducer

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  100        # Number of events to create
}

physics:
{

 producers:
 {
  FragmentToDigit:    @local::standard_fragmenttodigit
 }
 analyzers:
 {
lariatwvformpmt: @local::lariat_wvformpmt
 }
LariatProducer: [FragmentToDigit]

#define the output stream, there could be more than one if using filters 
 stream1:  [ out1]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 # #ie filters and producers
 trigger_paths: [LariatProducer]
 analyzeIt:  [  lariatwvformpmt ]

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 # #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [analyzeIt]

}

physics.producers.FragmentToDigit.pmt_channel_ids:[[],[],[],[],[],[],[],[],[],[0,1]]#set the channels with TPC PMTs in this mask - here ch 0 and 1 on board nr 9 (starting from 0)
physics.producers.FragmentToDigit.pmt_test:false


physics.analyzers.lariatwvformpmt.NumberOfPMTs: 2
physics.analyzers.lariatwvformpmt.InputModule:  "FragmentToDigit"
physics.analyzers.lariatwvformpmt.InstanceName:"Caenv1751Optical2"

physics.analyzers.lariatwvformpmt.fit_const: 0.0
physics.analyzers.lariatwvformpmt.fit_expmult1: 1.0
physics.analyzers.lariatwvformpmt.fit_expmult2: 1.0
physics.analyzers.lariatwvformpmt.fit_exp_slope1: 6.0
physics.analyzers.lariatwvformpmt.fit_exp_slope2: 1590.0
physics.analyzers.lariatwvformpmt.fit_start: 1200.0
physics.analyzers.lariatwvformpmt.fit_end: 2000.0


outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "pmtwvform.root" #default file name, can override from command line with -o or --output
   outputCommands: [ "keep *", "drop artdaq::Fragments_daq_*_Wrapper" ]
 }
}

services:
{
  TFileService: { fileName: "wvforms.root" }
#  message:      @local::standard_info
}
